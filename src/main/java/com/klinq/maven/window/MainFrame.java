package com.klinq.maven.window;

import com.klinq.maven.converter.ElementToMaven;
import com.klinq.maven.converter.ElementToPom;
import com.klinq.maven.filter.FilterJar;
import com.klinq.maven.pom.PomData;
import com.klinq.maven.pom.PomReader;
import com.klinq.maven.thread.Runner;
import java.io.File;
import java.awt.Toolkit;
import java.awt.datatransfer.Clipboard;
import java.awt.datatransfer.StringSelection;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import org.jdesktop.beansbinding.Converter;

/**
 * Main program frame
 * 
 * @author Deisss
 */
public class MainFrame extends javax.swing.JFrame {

    /**
     * Creates new form MainFrame
     */
    public MainFrame() {
        initComponents();
        updatePom();
        updateMaven();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        JTextFieldFile = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jTextFieldGroupId = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTextFieldArtifactId = new javax.swing.JTextField();
        jTextFieldVersion = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jTextFieldPackaging = new javax.swing.JTextField();
        autoComplete = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextPanePom = new javax.swing.JTextPane();
        jLabelCopyPom = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextPaneMaven = new javax.swing.JTextPane();
        jLabelCopyMaven = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Maven custom library");
        setName("mainFrame"); // NOI18N

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Choose a file"));

        jButton1.setText("Choose...");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setText("Choose file");
        jLabel1.setToolTipText("");

        JTextFieldFile.setText("");
        JTextFieldFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JTextFieldFileActionPerformed(evt);
            }
        });
        JTextFieldFile.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                JTextFieldFileKeyReleased(evt);
            }
        });

        jLabel2.setText("groupId");

        jTextFieldGroupId.setToolTipText("");
        jTextFieldGroupId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldGroupIdActionPerformed(evt);
            }
        });
        jTextFieldGroupId.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldGroupIdKeyReleased(evt);
            }
        });

        jLabel3.setText("artifactId");

        jTextFieldArtifactId.setToolTipText("");
        jTextFieldArtifactId.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldArtifactIdKeyReleased(evt);
            }
        });

        jTextFieldVersion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldVersionKeyReleased(evt);
            }
        });

        jLabel4.setText("version");

        jLabel5.setText("packaging");

        jTextFieldPackaging.setText("jar");
        jTextFieldPackaging.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldPackagingKeyReleased(evt);
            }
        });

        autoComplete.setText("auto discover...");

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, JTextFieldFile, org.jdesktop.beansbinding.ELProperty.create("${text}"), autoComplete, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        binding.setSourceNullValue(true);
        binding.setConverter(new Converter<String, Boolean>() {
            @Override
            public Boolean convertForward(String value) {
                if(value == null) {
                    return false;
                }
                return (value.length() > 0);
            }

            @Override
            public String convertReverse(Boolean value) {
                return "false";
            }
        });
        bindingGroup.addBinding(binding);

        autoComplete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                autoCompleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(JTextFieldFile)
                        .addGap(18, 18, 18)
                        .addComponent(jButton1)
                        .addGap(18, 18, 18)
                        .addComponent(autoComplete))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel4))
                        .addGap(33, 33, 33)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jTextFieldVersion, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel5)
                                .addGap(18, 18, 18)
                                .addComponent(jTextFieldPackaging, javax.swing.GroupLayout.DEFAULT_SIZE, 197, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jTextFieldGroupId, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel3)
                                .addGap(21, 21, 21)
                                .addComponent(jTextFieldArtifactId)))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jLabel1)
                    .addComponent(JTextFieldFile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(autoComplete))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTextFieldGroupId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(jTextFieldArtifactId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jTextFieldVersion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(jTextFieldPackaging, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        JTextFieldFile.getAccessibleContext().setAccessibleName("");

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Output pom.xml"));

        jScrollPane1.setViewportView(jTextPanePom);

        jLabelCopyPom.setForeground(new java.awt.Color(51, 153, 255));
        jLabelCopyPom.setText("Copy to clipboard");
        jLabelCopyPom.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabelCopyPom.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelCopyPomMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 244, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabelCopyPom))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelCopyPom))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Output maven command"));

        jScrollPane2.setViewportView(jTextPaneMaven);

        jLabelCopyMaven.setForeground(new java.awt.Color(51, 153, 255));
        jLabelCopyMaven.setText("Copy to clipboard");
        jLabelCopyMaven.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabelCopyMaven.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelCopyMavenMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabelCopyMaven))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jScrollPane2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelCopyMaven))
        );

        jButton2.setText("Install library");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton2)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jButton2)
                .addContainerGap())
        );

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void updatePom() {
        jTextPanePom.setText(ElementToPom.convert(
                jTextFieldGroupId.getText(),
                jTextFieldArtifactId.getText(),
                jTextFieldVersion.getText()
        ));
    }

    private void updateMaven() {
        jTextPaneMaven.setText(ElementToMaven.convert(
                JTextFieldFile.getText(),
                jTextFieldGroupId.getText(),
                jTextFieldArtifactId.getText(),
                jTextFieldVersion.getText(),
                jTextFieldPackaging.getText()
        ));
    }

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // First we try to check if there is missing data
        String mavenCommand = jTextPaneMaven.getText();
        if(mavenCommand.equals("")) {
            JOptionPane.showMessageDialog(this, "Maven command is empty...", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        if(mavenCommand.contains("{filepath}")) {
            JOptionPane.showMessageDialog(this, "Maven command does not contains file", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        if(mavenCommand.contains("{groupId}")) {
            JOptionPane.showMessageDialog(this, "Maven command does not contains groupId", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        if(mavenCommand.contains("{artifactId}")) {
            JOptionPane.showMessageDialog(this, "Maven command does not contains artifactId", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        if(mavenCommand.contains("{version}")) {
            JOptionPane.showMessageDialog(this, "Maven command does not contains version", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        if(mavenCommand.contains("{packaging}")) {
            JOptionPane.showMessageDialog(this, "Maven command does not contains packaging", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Remove unused escape char
        mavenCommand = mavenCommand.replace("\n", "");

        // Tes has been done, we can continue
        RunFrame showRun = new RunFrame();
        Runner run = new Runner(showRun.getTextArea(), mavenCommand);
        showRun.setVisible(true);

        // Starting runner
        Thread t = new Thread(run);
        t.start();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jLabelCopyPomMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelCopyPomMouseClicked
        StringSelection stringSelection = new StringSelection(jTextPanePom.getText());
        Clipboard clpbrd = Toolkit.getDefaultToolkit().getSystemClipboard();
        clpbrd.setContents(stringSelection, null);

        JOptionPane.showMessageDialog(this, "POM content copied", "Information", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_jLabelCopyPomMouseClicked

    private void jLabelCopyMavenMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelCopyMavenMouseClicked
        StringSelection stringSelection = new StringSelection(jTextPaneMaven.getText());
        Clipboard clpbrd = Toolkit.getDefaultToolkit().getSystemClipboard();
        clpbrd.setContents(stringSelection, null);

        JOptionPane.showMessageDialog(this, "Maven content copied", "Information", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_jLabelCopyMavenMouseClicked

    private void jTextFieldPackagingKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldPackagingKeyReleased
        updatePom();
        updateMaven();
    }//GEN-LAST:event_jTextFieldPackagingKeyReleased

    private void jTextFieldVersionKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldVersionKeyReleased
        updatePom();
        updateMaven();
    }//GEN-LAST:event_jTextFieldVersionKeyReleased

    private void jTextFieldArtifactIdKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldArtifactIdKeyReleased
        updatePom();
        updateMaven();
    }//GEN-LAST:event_jTextFieldArtifactIdKeyReleased

    private void jTextFieldGroupIdKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldGroupIdKeyReleased
        updatePom();
        updateMaven();
    }//GEN-LAST:event_jTextFieldGroupIdKeyReleased

    private void JTextFieldFileKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_JTextFieldFileKeyReleased
        updatePom();
        updateMaven();
    }//GEN-LAST:event_JTextFieldFileKeyReleased

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        JFileChooser jfc = new JFileChooser();
        jfc.addChoosableFileFilter(new FilterJar());

        if(jfc.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            JTextFieldFile.setText(jfc.getSelectedFile().getAbsolutePath());
            // Update element
            updatePom();
            updateMaven();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void autoCompleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_autoCompleteActionPerformed
        // Detect if file is existing
        File file = new File(JTextFieldFile.getText());
        if(!file.exists()) {
            JOptionPane.showMessageDialog(this, "Please provide a valid file to be able to read related pom.xml", "Cannot get pom.xml", JOptionPane.ERROR_MESSAGE);
            return;
        }
        // We search into all parents of this file for a pom.xml file
        String parent;
        boolean found = false;
        while(false == found && file != null) {
            parent = file.getParent();
            File potentialPomXml = new File(parent + File.separator + "pom.xml");
            // We found it !
            if(potentialPomXml.exists()) {
                found = true;
                // We parse the pom.xml
                PomData pom = PomReader.read(potentialPomXml);

                if(pom != null) {
                    jTextFieldGroupId.setText(pom.getGroupId());
                    jTextFieldArtifactId.setText(pom.getArtifactId());
                    jTextFieldVersion.setText(pom.getVersion());
                    jTextFieldPackaging.setText(pom.getPackaging());

                    updatePom();
                    updateMaven();
                }
            }
            
            // We go one backward
            file = file.getParentFile();
        }
    }//GEN-LAST:event_autoCompleteActionPerformed

    private void JTextFieldFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JTextFieldFileActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_JTextFieldFileActionPerformed

    private void jTextFieldGroupIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldGroupIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldGroupIdActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            javax.swing.UIManager.setLookAndFeel(javax.swing.UIManager.getSystemLookAndFeelClassName());
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                JFrame jf = new MainFrame();
                jf.setLocationRelativeTo(null);
                jf.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField JTextFieldFile;
    private javax.swing.JButton autoComplete;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabelCopyMaven;
    private javax.swing.JLabel jLabelCopyPom;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTextFieldArtifactId;
    private javax.swing.JTextField jTextFieldGroupId;
    private javax.swing.JTextField jTextFieldPackaging;
    private javax.swing.JTextField jTextFieldVersion;
    private javax.swing.JTextPane jTextPaneMaven;
    private javax.swing.JTextPane jTextPanePom;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
}
